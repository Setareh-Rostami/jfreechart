/*
 * This file was automatically generated by EvoSuite
 * Mon May 31 17:00:12 GMT 2021
 */

package org.jfree.chart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.time.chrono.ChronoLocalDate;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartTheme;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.StandardChartTheme;
import org.jfree.chart.api.Layer;
import org.jfree.chart.api.RectangleAlignment;
import org.jfree.chart.api.TableOrder;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.date.SpreadsheetDate;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.plot.pie.PieLabelLinkStyle;
import org.jfree.chart.renderer.xy.CandlestickRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.IntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.gantt.SlidingGanttCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import org.jfree.data.general.WaferMapDataset;
import org.jfree.data.statistics.BoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.BoxAndWhiskerXYDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.time.Day;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.Second;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.TimeTableXYDataset;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.DefaultHighLowDataset;
import org.jfree.data.xy.DefaultIntervalXYDataset;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.IntervalXYDataset;
import org.jfree.data.xy.MatrixSeriesCollection;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.OHLCDataset;
import org.jfree.data.xy.TableXYDataset;
import org.jfree.data.xy.VectorSeriesCollection;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYIntervalSeriesCollection;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.data.xy.XYZDataset;
import org.jfree.data.xy.YIntervalSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ChartFactory_ESTest extends ChartFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DefaultBoxAndWhiskerXYDataset<String> defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset<String>("DRAWING_FINISHED");
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYStepChart("DRAWING_FINISHED", "DRAWING_FINISHED", "DRAWING_FINISHED", (XYDataset) defaultBoxAndWhiskerXYDataset0, plotOrientation0, true, false, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYStepChart((String) null, "dHD#KIL+w+W", "INSIDE9", (XYDataset) categoryTableXYDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DefaultXYZDataset<Integer> defaultXYZDataset0 = new DefaultXYZDataset<Integer>();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYStepAreaChart("listener", "listener", "4R:!max", (XYDataset) defaultXYZDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DefaultTableXYDataset<Integer> defaultTableXYDataset0 = new DefaultTableXYDataset<Integer>();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYStepAreaChart("org.jfree.chart.api.SortOrder", "NjjvSU", "org.jfree.chart.api.SortOrder", (XYDataset) defaultTableXYDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYAreaChart("C[[mA}Gd`=[1eK,vbR", "n}Ni* <ZLo{y~", "TG]/", (XYDataset<Layer>) defaultWindDataset0, plotOrientation0, true, true, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      YIntervalSeriesCollection<Integer> yIntervalSeriesCollection0 = new YIntervalSeriesCollection<Integer>();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYAreaChart("B1|NTi+S0;O>].'*Hi", "B1|NTi+S0;O>].'*Hi", "B1|NTi+S0;O>].'*Hi", (XYDataset<Integer>) yIntervalSeriesCollection0, plotOrientation0, false, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      VectorSeriesCollection<String> vectorSeriesCollection0 = new VectorSeriesCollection<String>();
      JFreeChart jFreeChart0 = ChartFactory.createXYAreaChart("XcT!)9h#}3*nrO", "XcT!)9h#}3*nrO", "Ad", (XYDataset<String>) vectorSeriesCollection0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(0, 0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createWaferMapChart("{MY#@CcukX193s\"V", waferMapDataset0, plotOrientation0, true, false, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(4, (-2656));
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createWaferMapChart("", waferMapDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DefaultTableXYDataset<Integer> defaultTableXYDataset0 = new DefaultTableXYDataset<Integer>();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createStackedXYAreaChart("JFree", "k(v6m|5Q", "JFree", (TableXYDataset) defaultTableXYDataset0, plotOrientation0, false, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      double[][] doubleArray0 = new double[2][6];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createStackedBarChart("M", "@k", "@k", (CategoryDataset) defaultIntervalCategoryDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultTableXYDataset<Integer> defaultTableXYDataset0 = new DefaultTableXYDataset<Integer>(false);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createScatterPlot("green", "R(w=.f<ri<FWT?Vs.", "PwlA%:,", (XYDataset) defaultTableXYDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("DefaultIntervalCategoryDataset: the number of categories in the start value dataset does not match the number of categories in the end value dataset.", (PieDataset) null, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DefaultPieDataset<String> defaultPieDataset0 = new DefaultPieDataset<String>();
      Locale locale0 = Locale.PRC;
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("t&~qZ@", (PieDataset) defaultPieDataset0, false, true, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XYIntervalSeriesCollection<Integer> xYIntervalSeriesCollection0 = new XYIntervalSeriesCollection<Integer>();
      JFreeChart jFreeChart0 = ChartFactory.createPolarChart("f:5-3PrE+ZHm_5E #", xYIntervalSeriesCollection0, false, true, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DefaultMultiValueCategoryDataset<Integer, String> defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset<Integer, String>();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart("+jvm|5Q", defaultMultiValueCategoryDataset0, tableOrder0, false, false, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[6];
      DateAxis dateAxis0 = new DateAxis("}-XiP/|");
      Date date0 = dateAxis0.getMaximumDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(date0, (-1.0), (-1327.547), (-1606.835114290908), 0.05, (-1135.0));
      oHLCDataItemArray0[0] = oHLCDataItem0;
      oHLCDataItemArray0[1] = oHLCDataItemArray0[0];
      oHLCDataItemArray0[2] = oHLCDataItemArray0[0];
      oHLCDataItemArray0[3] = oHLCDataItem0;
      oHLCDataItemArray0[4] = oHLCDataItemArray0[2];
      oHLCDataItemArray0[5] = oHLCDataItemArray0[0];
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset("TqM#z%m", oHLCDataItemArray0);
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart("}-XiP/|", "TqM#z%m", "red", defaultOHLCDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createHighLowChart("<T&", "<T&", ":{kL8KHZZoj`}", (OHLCDataset) null, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createGanttChart("org.jfree.chart.labels.ItemLabelPosition", "~dTd44X#.l~=l!w", "", (IntervalCategoryDataset) null, true, false, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createCandlestickChart("-<ebe", "Legacy", "-<ebe", (OHLCDataset) null, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createCandlestickChart("O~=^|zZ", "O~=^|zZ", "red", (OHLCDataset) null, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CandlestickRenderer candlestickRenderer0 = new CandlestickRenderer((-1.0));
      XYPlot xYPlot0 = candlestickRenderer0.getPlot();
      DefaultBoxAndWhiskerXYDataset<Integer> defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset<Integer>((Integer) xYPlot0.MINIMUM_WIDTH_TO_DRAW);
      JFreeChart jFreeChart0 = ChartFactory.createBoxAndWhiskerChart("d", "?%^Xn]>DcBgk", "?%^Xn]>DcBgk", (BoxAndWhiskerXYDataset) defaultBoxAndWhiskerXYDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset<Integer, Integer> defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset<Integer, Integer>();
      JFreeChart jFreeChart0 = ChartFactory.createBoxAndWhiskerChart("SansSerif", "m4SP3nIX)G3@h", "org.jfree.chart.axis.SubCategoryAxis", (BoxAndWhiskerCategoryDataset) defaultBoxAndWhiskerCategoryDataset0, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.setChartTheme((ChartTheme) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'theme' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      MockDate mockDate0 = new MockDate(128, 211, 211);
      TimeZone timeZone0 = TimeZone.getDefault();
      Locale locale0 = Locale.UK;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0, locale0);
      Day day0 = new Day(mockDate0, mockGregorianCalendar0);
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(128, 128, day0);
      // Undeclared exception!
      try { 
        ChartFactory.createXYStepAreaChart("jg", "jg", "jg", (XYDataset) dynamicTimeSeriesCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1536, 0);
      // Undeclared exception!
      try { 
        ChartFactory.createXYAreaChart("H2hv#${9-1\"F<g-", "+jvm5nxQ", "7nnZ", (XYDataset<Integer>) dynamicTimeSeriesCollection0, plotOrientation0, false, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(2083, 2083);
      // Undeclared exception!
      try { 
        ChartFactory.createTimeSeriesChart("|t]~UA", "|:/K^*ID^:NYju_|E", "|:/K^*ID^:NYju_|E", (XYDataset) dynamicTimeSeriesCollection0, false, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      double[][] doubleArray0 = new double[2][6];
      double[] doubleArray1 = new double[8];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
      try { 
        ChartFactory.createStackedBarChart("M", "@k", "@k", (CategoryDataset) defaultIntervalCategoryDataset0, plotOrientation0, true, true, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset((Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        ChartFactory.createStackedBarChart("QZR<oP", "QZR<oP", "org.jfree.chart.ChartFactory", (CategoryDataset) defaultIntervalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      double[][] doubleArray0 = new double[6][9];
      double[] doubleArray1 = new double[5];
      doubleArray0[1] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createStackedBarChart("`g5ee(", "N=ZjngU", "N=ZjngU", (CategoryDataset) defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Number[][] numberArray0 = new Number[4][8];
      Number[] numberArray1 = new Number[9];
      numberArray0[0] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createStackedAreaChart("\"Qxp|sB7xR=", "`.lh!VQGJjPg=", "`.lh!VQGJjPg=", (CategoryDataset) defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset("+", (OHLCDataItem[]) null);
      // Undeclared exception!
      try { 
        ChartFactory.createScatterPlot(" Close=", "+", "+", (XYDataset) defaultOHLCDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.DefaultOHLCDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DefaultPieDataset<ChronoLocalDate> defaultPieDataset0 = new DefaultPieDataset<ChronoLocalDate>();
      // Undeclared exception!
      try { 
        ChartFactory.createRingChart("Darkness", (PieDataset) defaultPieDataset0, true, true, (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("lineStroke", (PieDataset) null, true, true, (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset1 = new DefaultKeyedValuesDataset<String>();
      defaultKeyedValuesDataset1.setValue("k1", (-37.491424919688974));
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("k1", (PieDataset) defaultKeyedValuesDataset1, (PieDataset) defaultKeyedValuesDataset0, (-2147483646), true, true, true, false, false, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key not found: k1
         //
         verifyException("org.jfree.data.DefaultKeyedValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart(">x}6KLMl%#4C@G6", (PieDataset) null, (PieDataset) null, (-1970772934), true, false, true, false, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      defaultKeyedValuesDataset0.setValue("k1", (-37.491424919688974));
      DefaultStatisticalCategoryDataset<String, String> defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset<String, String>();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      defaultStatisticalCategoryDataset0.add((Number) integer0, (Number) integer0, "k1", "k1");
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultStatisticalCategoryDataset0, tableOrder0, (-1970772951));
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("k1", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) categoryToPieDataset0, (-1970772951), true, true, true, true, true, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      defaultKeyedValuesDataset0.setValue("`(5e(", 102.836460565963);
      Locale locale0 = Locale.ROOT;
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset1 = new DefaultKeyedValuesDataset<String>();
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("`(5e(", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset1, 524, true, true, true, locale0, true, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key not found: `(5e(
         //
         verifyException("org.jfree.data.DefaultKeyedValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Locale locale0 = new Locale("Njvg", "Njvg");
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("Njvg", (PieDataset) null, (PieDataset) null, 10, true, false, false, locale0, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.ChartFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      defaultKeyedValuesDataset0.setValue("tmjme", 1933.096553);
      Locale locale0 = Locale.KOREA;
      DefaultKeyedValues2DDataset<String, Layer> defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset<String, Layer>();
      Layer layer0 = Layer.FOREGROUND;
      defaultKeyedValues2DDataset0.setValue((Number) 1.0F, "tmjme", layer0);
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultKeyedValues2DDataset0, tableOrder0, 10);
      // Undeclared exception!
      try { 
        ChartFactory.createPieChart("tmjme", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) categoryToPieDataset0, 10, false, true, false, locale0, false, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Number[][] numberArray0 = new Number[2][7];
      Number[] numberArray1 = new Number[3];
      numberArray0[1] = numberArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        ChartFactory.createLineChart("la d8", "la d8", "la d8", (CategoryDataset) defaultIntervalCategoryDataset0, plotOrientation0, false, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Date[] dateArray0 = new Date[1];
      MockDate mockDate0 = new MockDate(540, (-1970772934), (-1970772934), (-1970772934), 4);
      dateArray0[0] = (Date) mockDate0;
      double[] doubleArray0 = new double[0];
      DefaultHighLowDataset defaultHighLowDataset0 = new DefaultHighLowDataset(0.5F, dateArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart("QZ<o-ZP", "QZ<o-ZP", "QZ<o-ZP", defaultHighLowDataset0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // A positive range length is required: [Nov 3, 169849142, 2:04:00 AM --> Nov 3, 169849142, 2:04:00 AM]
         //
         verifyException("org.jfree.chart.axis.ValueAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Date[] dateArray0 = new Date[1];
      SpreadsheetDate spreadsheetDate0 = new SpreadsheetDate(995);
      Date date0 = spreadsheetDate0.toDate();
      dateArray0[0] = date0;
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[0];
      DefaultHighLowDataset defaultHighLowDataset0 = new DefaultHighLowDataset("tmjme", dateArray0, doubleArray0, doubleArray1, doubleArray1, doubleArray1, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart("SHTK09+1O", "tmjme", "org.jfree.chart.labels.StandardPieToolTipGenerator", defaultHighLowDataset0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.jfree.data.xy.DefaultHighLowDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      double[][] doubleArray0 = new double[8][4];
      double[] doubleArray1 = new double[7];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createGanttChart("fillPaint", "fillPaint", "TnZ", (IntervalCategoryDataset) defaultIntervalCategoryDataset0, false, false, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4 out of bounds for length 4
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String[] stringArray0 = new String[9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        ChartFactory.createGanttChart("", "", "", (IntervalCategoryDataset) defaultIntervalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      double[][] doubleArray0 = new double[5][8];
      double[] doubleArray1 = new double[5];
      doubleArray0[2] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createGanttChart("}TADZ.\"U@UImf$q2;Q~", ".Un$T9-;ue8kM[54", "}TADZ.\"U@UImf$q2;Q~", (IntervalCategoryDataset) defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 5 out of bounds for length 5
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("Cannot parse string.", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, (-2145950825), true, true, false, false, false, true);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[1];
      DateAxis dateAxis0 = new DateAxis();
      Date date0 = dateAxis0.getMaximumDate();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(date0, 12.0, 1.0E-8, 100.0, (-2145950825), (-2884.9204045019333));
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(jFreeChart0.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT, oHLCDataItemArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createCandlestickChart("Cannot parse string.", "", "", defaultOHLCDataset0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Range(double, double): require lower (100.0) <= upper (1.0E-8).
         //
         verifyException("org.jfree.data.Range", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Date[] dateArray0 = new Date[3];
      DateAxis dateAxis0 = new DateAxis();
      dateArray0[0] = dateAxis0.DEFAULT_ANCHOR_DATE;
      Date date0 = dateAxis0.getMaximumDate();
      dateArray0[1] = date0;
      dateArray0[2] = date0;
      double[] doubleArray0 = new double[0];
      DefaultHighLowDataset defaultHighLowDataset0 = new DefaultHighLowDataset("2`w5tcLHZ7l", dateArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createCandlestickChart("2`w5tcLHZ7l", "GqD", "+xvm'nxQ", defaultHighLowDataset0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.jfree.data.xy.DefaultHighLowDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DefaultBoxAndWhiskerXYDataset<String> defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset<String>((String) null);
      // Undeclared exception!
      try { 
        ChartFactory.createBoxAndWhiskerChart("theme", "PxomAu\nqgq^;#", (String) null, (BoxAndWhiskerXYDataset) defaultBoxAndWhiskerXYDataset0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.general.AbstractSeriesDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DefaultMultiValueCategoryDataset<Integer, String> defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset<Integer, String>();
      // Undeclared exception!
      try { 
        ChartFactory.createBarChart("jdY", "jdY", "jdY", (CategoryDataset) defaultMultiValueCategoryDataset0, (PlotOrientation) null, false, false, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      double[] doubleArray1 = new double[8];
      doubleArray0[0] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createBarChart("cLrv", "cLrv", "cLrv", (CategoryDataset) defaultIntervalCategoryDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String[] stringArray0 = new String[9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      // Undeclared exception!
      try { 
        ChartFactory.createAreaChart("C_AxeV`cK(kyR#e", "lJV5X!AK", "NzVhWP-&)I<%53|/.", (CategoryDataset) defaultIntervalCategoryDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DefaultXYZDataset<ChronoLocalDate> defaultXYZDataset0 = new DefaultXYZDataset<ChronoLocalDate>();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createBubbleChart("org.jfree.data.gantt.TaskSeriesCollection", "org.jfree.data.gantt.TaskSeriesCollection", "org.jfree.data.gantt.TaskSeriesCollection", (XYZDataset) defaultXYZDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultXYZDataset<ChronoLocalDate> defaultXYZDataset0 = new DefaultXYZDataset<ChronoLocalDate>();
      JFreeChart jFreeChart0 = ChartFactory.createBubbleChart("org.jfree.chart.block.GridArrangement", "+", (String) null, (XYZDataset) defaultXYZDataset0, plotOrientation0, false, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      TimeSeriesCollection<Integer> timeSeriesCollection0 = new TimeSeriesCollection<Integer>();
      JFreeChart jFreeChart0 = ChartFactory.createTimeSeriesChart(",bLm_W\"60dI", "pieIndex", ",bLm_W\"60dI", (XYDataset) timeSeriesCollection0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DefaultTableXYDataset<Integer> defaultTableXYDataset0 = new DefaultTableXYDataset<Integer>();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYLineChart("(/uv-+<<B2'", "(/uv-+<<B2'", "Krs1;0&tfeT9", (XYDataset) defaultTableXYDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      MatrixSeriesCollection<String> matrixSeriesCollection0 = new MatrixSeriesCollection<String>();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYLineChart("7NbE-X3R3XSM^", (String) null, "Legacy", (XYDataset) matrixSeriesCollection0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XYSeriesCollection<Integer> xYSeriesCollection0 = new XYSeriesCollection<Integer>();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYBarChart("ckEfx8X", "org.jfree.chart.legend.LegendItemCollection", false, "JFree", (IntervalXYDataset) xYSeriesCollection0, plotOrientation0, false, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultMultiValueCategoryDataset<String, ChronoLocalDate> defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset<String, ChronoLocalDate>();
      JFreeChart jFreeChart0 = ChartFactory.createLineChart("D!enQDhQ}8pB<Q`F", "JFree", "eUgS8w&z<cz;>fG$oum", (CategoryDataset) defaultMultiValueCategoryDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createStackedBarChart("", "", (String) null, (CategoryDataset) null, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      DefaultMultiValueCategoryDataset<Integer, String> defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset<Integer, String>();
      JFreeChart jFreeChart0 = ChartFactory.createBarChart("+jvm|5Q", "+jvm|5Q", "+jvm|5Q", (CategoryDataset) defaultMultiValueCategoryDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      DefaultMultiValueCategoryDataset<Integer, String> defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset<Integer, String>();
      JFreeChart jFreeChart0 = ChartFactory.createBarChart("k(vm|5Q", "k(vm|5Q", "k(vm|5Q", (CategoryDataset) defaultMultiValueCategoryDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DefaultIntervalXYDataset<String> defaultIntervalXYDataset0 = new DefaultIntervalXYDataset<String>();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createScatterPlot("SansSerif", "SansSerif", "SansSerif", (XYDataset) defaultIntervalXYDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DefaultBoxAndWhiskerXYDataset<String> defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset<String>((String) null);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
      try { 
        ChartFactory.createXYStepAreaChart("org.jfree.chart.ChartFactory", "green", "labelFont", (XYDataset) defaultBoxAndWhiskerXYDataset0, plotOrientation0, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.general.AbstractSeriesDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createStackedXYAreaChart("Default tool tip generator not loneable.", "CY3?Xe`Q2", "CY3?Xe`Q2", (TableXYDataset) null, plotOrientation0, true, false, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      JFreeChart jFreeChart0 = ChartFactory.createWindPlot("#l!Ee;#E|7", "#l!Ee;#E|7", "F?.di/^", defaultWindDataset0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      JFreeChart jFreeChart0 = ChartFactory.createWindPlot("hoL^G$7", "hoL^G$7", (String) null, defaultWindDataset0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DefaultTableXYDataset<Integer> defaultTableXYDataset0 = new DefaultTableXYDataset<Integer>(true);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createHistogram("w5X8P", "w5X8P", "+", (IntervalXYDataset) defaultTableXYDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createHistogram("container", "container", "container", (IntervalXYDataset) categoryTableXYDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DefaultXYZDataset<Integer> defaultXYZDataset0 = new DefaultXYZDataset<Integer>();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createBubbleChart("Requires StatisticalCategoryDataset.", "Requires StatisticalCategoryDataset.", "Requires StatisticalCategoryDataset.", (XYZDataset) defaultXYZDataset0, plotOrientation0, true, false, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createTimeSeriesChart((String) null, (String) null, (String) null, (XYDataset) null, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYBarChart((String) null, "KMp]CB-oy", true, (String) null, (IntervalXYDataset) categoryTableXYDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XYSeriesCollection<String> xYSeriesCollection0 = new XYSeriesCollection<String>();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createXYBarChart("JFree", "NgjXgt", false, "NgjXgt", (IntervalXYDataset) xYSeriesCollection0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      TimeSeriesCollection<String> timeSeriesCollection0 = new TimeSeriesCollection<String>();
      JFreeChart jFreeChart0 = ChartFactory.createXYBarChart("SAVE_AS_PDF", "SAVE_AS_PDF", false, "SAVE_AS_PDF", (IntervalXYDataset) timeSeriesCollection0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(10, 10);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        ChartFactory.createXYStepChart((String) null, "order", (String) null, (XYDataset) dynamicTimeSeriesCollection0, plotOrientation0, false, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String[] stringArray0 = new String[2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(stringArray0, (Number[][]) null, (Number[][]) null);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        ChartFactory.createWaterfallChart("QZ<o-ZP", "QZ<o-ZP", "xPT", defaultIntervalCategoryDataset0, plotOrientation0, true, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      TaskSeriesCollection<ChronoLocalDate, String> taskSeriesCollection0 = new TaskSeriesCollection<ChronoLocalDate, String>();
      SlidingCategoryDataset<ChronoLocalDate, String> slidingCategoryDataset0 = new SlidingCategoryDataset<ChronoLocalDate, String>(taskSeriesCollection0, (-162), (-162));
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createWaterfallChart("%lZ_pe6&@", (String) null, "%lZ_pe6&@", slidingCategoryDataset0, plotOrientation0, false, false, true);
      assertEquals(RectangleAlignment.FILL, jFreeChart0.getBackgroundImageAlignment());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DefaultMultiValueCategoryDataset<ChronoLocalDate, String> defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset<ChronoLocalDate, String>();
      SlidingCategoryDataset<ChronoLocalDate, String> slidingCategoryDataset0 = new SlidingCategoryDataset<ChronoLocalDate, String>(defaultMultiValueCategoryDataset0, 2388, 2143722730);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createWaterfallChart((String) null, (String) null, (String) null, slidingCategoryDataset0, plotOrientation0, true, false, false);
      assertNull(jFreeChart0.getID());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      TaskSeriesCollection<Layer, Integer> taskSeriesCollection0 = new TaskSeriesCollection<Layer, Integer>();
      JFreeChart jFreeChart0 = ChartFactory.createGanttChart("NZjvgU", "-ylmyCLP", "NZjvgU", (IntervalCategoryDataset) taskSeriesCollection0, false, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Number[][] numberArray0 = new Number[2][7];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createLineChart("la d8", "la d8", "la d8", (CategoryDataset) defaultIntervalCategoryDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DefaultKeyedValues2DDataset<Layer, String> defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset<Layer, String>();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createStackedAreaChart("Njvg", "Njvg", "Njvg", (CategoryDataset) defaultKeyedValues2DDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      TaskSeriesCollection<ChronoLocalDate, ChronoLocalDate> taskSeriesCollection0 = new TaskSeriesCollection<ChronoLocalDate, ChronoLocalDate>();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, 4678, 4678);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      JFreeChart jFreeChart0 = ChartFactory.createStackedAreaChart("{'D/<p_S~$U{-", "M3c.j", "G|n39)~gZbmti", (CategoryDataset) slidingGanttCategoryDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset<ChronoLocalDate, String> defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset<ChronoLocalDate, String>();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createAreaChart((String) null, (String) null, (String) null, (CategoryDataset) defaultBoxAndWhiskerCategoryDataset0, plotOrientation0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DefaultMultiValueCategoryDataset<Layer, String> defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset<Layer, String>();
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      JFreeChart jFreeChart0 = ChartFactory.createAreaChart("order", "order", "order", (CategoryDataset) defaultMultiValueCategoryDataset0, plotOrientation0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Comparable<Integer>[] comparableArray0 = (Comparable<Integer>[]) Array.newInstance(Comparable.class, 0);
      Number[][] numberArray0 = new Number[3][2];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(comparableArray0, comparableArray0, numberArray0, (Number[][]) null);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
      try { 
        ChartFactory.createBarChart("vYB[G", "red", "BY_ROW", (CategoryDataset) defaultIntervalCategoryDataset0, plotOrientation0, true, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      TaskSeriesCollection<String, String> taskSeriesCollection0 = new TaskSeriesCollection<String, String>();
      SlidingGanttCategoryDataset slidingGanttCategoryDataset0 = new SlidingGanttCategoryDataset(taskSeriesCollection0, (-45), 0);
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart("{MY#@CcukX193s\"V", slidingGanttCategoryDataset0, tableOrder0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DefaultKeyedValues2DDataset<ChronoLocalDate, Layer> defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset<ChronoLocalDate, Layer>();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      JFreeChart jFreeChart0 = ChartFactory.createMultiplePieChart("NZjvgU", defaultKeyedValues2DDataset0, tableOrder0, true, false, false);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DefaultPieDataset<ChronoLocalDate> defaultPieDataset0 = new DefaultPieDataset<ChronoLocalDate>();
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("position", (PieDataset) defaultPieDataset0, false, true, true);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DefaultPieDataset<ChronoLocalDate> defaultPieDataset0 = new DefaultPieDataset<ChronoLocalDate>();
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("position", (PieDataset) defaultPieDataset0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DefaultPieDataset<ChronoLocalDate> defaultPieDataset0 = new DefaultPieDataset<ChronoLocalDate>();
      Locale locale0 = Locale.TAIWAN;
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("./EZ81IOYZ8,", (PieDataset) defaultPieDataset0, true, true, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DefaultKeyedValuesDataset<Layer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Layer>();
      Locale locale0 = Locale.GERMAN;
      JFreeChart jFreeChart0 = ChartFactory.createRingChart("g`fj%}or0J1(", (PieDataset) defaultKeyedValuesDataset0, true, false, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      defaultKeyedValuesDataset0.setValue("7NbE-X3R3XSM^", (double) 0);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("7NbE-X3R3XSM^", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, 321, false, true, false, false, true, true);
      assertEquals(2, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      defaultKeyedValuesDataset0.setValue("CENTER_LEFT", (-1704.8083024398709));
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("CENTER_LEFT", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, (-1970772939), false, false, false, false, false, false);
      assertFalse(jFreeChart0.isBorderVisible());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      defaultKeyedValuesDataset0.setValue("oOSGx", (double) 0);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("oOSGx", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, 0, true, true, true, true, true, false);
      assertFalse(jFreeChart0.isBorderVisible());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      defaultKeyedValuesDataset0.setValue("k1", (-37.491424919688974));
      DefaultStatisticalCategoryDataset<String, String> defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset<String, String>();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultStatisticalCategoryDataset0, tableOrder0, (-1970772954));
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("k1", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) categoryToPieDataset0, (-1970772954), false, false, false, false, false, false);
      assertNull(jFreeChart0.getID());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      defaultKeyedValuesDataset0.setValue("k(vm|5Q", 4.466448495717882);
      DefaultStatisticalCategoryDataset<String, String> defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset<String, String>();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultStatisticalCategoryDataset0, tableOrder0, (-1970772951));
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("k(vm|5Q", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) categoryToPieDataset0, (-1970772951), true, true, true, true, true, true);
      assertTrue(jFreeChart0.getAntiAlias());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      defaultKeyedValuesDataset0.setValue("Cannot parse string.", (-2884.9204045019333));
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("Cannot parse string.", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, (-2145950825), true, true, false, false, false, true);
      assertEquals(0.5F, JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      defaultKeyedValuesDataset0.setValue("`g5ee(", (double) 0);
      Locale locale0 = Locale.TAIWAN;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart(":OSGx", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, 0, true, true, true, locale0, true, true);
      assertFalse(jFreeChart0.isBorderVisible());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      defaultKeyedValuesDataset0.setValue("5;KEI8E<M&3K", 65.31960496661);
      Locale locale0 = Locale.PRC;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("5;KEI8E<M&3K", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, (-1210), false, false, false, locale0, false, false);
      assertNull(jFreeChart0.getID());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      defaultKeyedValuesDataset0.setValue("\"Qxp|sB7xR=", 71.57860177078773);
      Locale locale0 = Locale.ITALIAN;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("\"Qxp|sB7xR=", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, 504, true, true, true, locale0, true, true);
      assertFalse(jFreeChart0.getElementHinting());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      defaultKeyedValuesDataset0.setValue("5;KEI8E<M&3K", 1933.096553);
      Locale locale0 = Locale.KOREA;
      DefaultKeyedValues2DDataset<String, Layer> defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset<String, Layer>();
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultKeyedValues2DDataset0, tableOrder0, 10);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("5;KEI8E<M&3K", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) categoryToPieDataset0, 10, false, true, true, locale0, false, false);
      assertTrue(jFreeChart0.isNotify());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      defaultKeyedValuesDataset0.setValue("{3}{4x", 1933.096553);
      Locale locale0 = Locale.KOREA;
      DefaultKeyedValues2DDataset<String, Layer> defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset<String, Layer>();
      TableOrder tableOrder0 = TableOrder.BY_ROW;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultKeyedValues2DDataset0, tableOrder0, 10);
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("{3}{4x", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) categoryToPieDataset0, 10, true, true, true, locale0, false, true);
      assertNull(jFreeChart0.getID());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      defaultKeyedValuesDataset0.setValue("vYB[G", (-2897.7533536604546));
      Locale locale0 = Locale.ITALY;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("vYB[G", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, (-1284), false, false, false, locale0, true, true);
      assertTrue(jFreeChart0.isNotify());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("Zjvg", (PieDataset) defaultKeyedValuesDataset0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("Zjvg", (PieDataset) defaultKeyedValuesDataset0, false, false, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      Locale locale0 = Locale.KOREAN;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("order", (PieDataset) defaultKeyedValuesDataset0, true, true, locale0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      Locale locale0 = Locale.KOREAN;
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("order", (PieDataset) defaultKeyedValuesDataset0, false, false, locale0);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ChartTheme chartTheme0 = StandardChartTheme.createLegacyTheme();
      ChartFactory.setChartTheme(chartTheme0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StandardChartTheme standardChartTheme0 = new StandardChartTheme("NZjvgU");
      ChartFactory.setChartTheme(standardChartTheme0);
      assertEquals(PieLabelLinkStyle.CUBIC_CURVE, standardChartTheme0.getLabelLinkStyle());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1811, 1811);
      // Undeclared exception!
      try { 
        ChartFactory.createXYAreaChart("org.jfree.chart.renderer.xy.YIntervalRenderer", "Legacy", "Legacy", (XYDataset<Integer>) dynamicTimeSeriesCollection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      double[][] doubleArray0 = new double[5][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      JFreeChart jFreeChart0 = ChartFactory.createGanttChart("}TADZ.\"U@UImf$q2;Q~", ".Un$T9-;ue8kM[54", "}TADZ.\"U@UImf$q2;Q~", (IntervalCategoryDataset) defaultIntervalCategoryDataset0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("org.jfree.data.general.WaferMapDataset", (PieDataset) null);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Number[][] numberArray0 = new Number[4][8];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(numberArray0, numberArray0);
      JFreeChart jFreeChart0 = ChartFactory.createStackedAreaChart("\"Qxp|sB7xR=", "`.lh!VQGJjPg=", "`.lh!VQGJjPg=", (CategoryDataset) defaultIntervalCategoryDataset0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createStackedXYAreaChart("VO&ft", "l!ap", "VO&ft", (TableXYDataset) null);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      double[][] doubleArray0 = new double[2][0];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      JFreeChart jFreeChart0 = ChartFactory.createBarChart("cLrv", "cLrv", "cLrv", (CategoryDataset) defaultIntervalCategoryDataset0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset<ChronoLocalDate, ChronoLocalDate> defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset<ChronoLocalDate, ChronoLocalDate>();
      JFreeChart jFreeChart0 = ChartFactory.createBoxAndWhiskerChart("^GJH>b|l~c:7", "^GJH>b|l~c:7", "createPage", (BoxAndWhiskerCategoryDataset) defaultBoxAndWhiskerCategoryDataset0, false);
      assertEquals(0, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Second second0 = new Second();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(10, 2415, second0);
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      // Undeclared exception!
      try { 
        ChartFactory.createXYAreaChart("(h0BS:PhQQT#m)US]n", "org.jfree.data.statistics.DefaultMultiValueCategoryDataset", "WLF1}TKS(_t4f@4Iu?", (XYDataset<ChronoLocalDate>) dynamicTimeSeriesCollection0, plotOrientation0, true, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HistogramDataset histogramDataset0 = new HistogramDataset();
      JFreeChart jFreeChart0 = ChartFactory.createTimeSeriesChart("Q.T*Qy@Q$sae,('y", "theme", "theme", (XYDataset) histogramDataset0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createXYStepAreaChart("i6|u0Rt%NycK/j", "i6|u0Rt%NycK/j", "i6|u0Rt%NycK/j", (XYDataset) null);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DefaultKeyedValuesDataset<String> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<String>();
      JFreeChart jFreeChart0 = ChartFactory.createPieChart("Cannot parse string.", (PieDataset) defaultKeyedValuesDataset0, (PieDataset) defaultKeyedValuesDataset0, (-2145950825), true, true, false, false, false, true);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[1];
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(jFreeChart0.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT, oHLCDataItemArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createCandlestickChart("Cannot parse string.", "", "", defaultOHLCDataset0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.DefaultOHLCDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DefaultIntervalXYDataset<Integer> defaultIntervalXYDataset0 = new DefaultIntervalXYDataset<Integer>();
      JFreeChart jFreeChart0 = ChartFactory.createScatterPlot("y%k6VGv-", "y%k6VGv-", "K", (XYDataset) defaultIntervalXYDataset0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      TimeTableXYDataset timeTableXYDataset0 = new TimeTableXYDataset();
      JFreeChart jFreeChart0 = ChartFactory.createXYLineChart("k(vm|5Q", "3", "k(vm|5Q", (XYDataset) timeTableXYDataset0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      double[][] doubleArray0 = new double[6][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      JFreeChart jFreeChart0 = ChartFactory.createStackedBarChart("`g5ee(", "N=ZjngU", "N=ZjngU", (CategoryDataset) defaultIntervalCategoryDataset0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StandardChartTheme standardChartTheme0 = (StandardChartTheme)ChartFactory.getChartTheme();
      assertFalse(standardChartTheme0.isShadowVisible());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DefaultMultiValueCategoryDataset<Integer, String> defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset<Integer, String>();
      JFreeChart jFreeChart0 = ChartFactory.createLineChart("org.jfree.data.DefaultKeyedValue", "SansSerif", "SansSerif", (CategoryDataset) defaultMultiValueCategoryDataset0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createAreaChart("{$qaZCnze^G'vU^@", "{$qaZCnze^G'vU^@", "`g5ee(", (CategoryDataset) null);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XYSeriesCollection<Integer> xYSeriesCollection0 = new XYSeriesCollection<Integer>();
      JFreeChart jFreeChart0 = ChartFactory.createHistogram("orientation", "+ HKk7z8YmJ>BZYrH5", "l[Vi{KB3;'Lw`", (IntervalXYDataset) xYSeriesCollection0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createBoxAndWhiskerChart("order", "order", "order", (BoxAndWhiskerXYDataset) null, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      JFreeChart jFreeChart0 = ChartFactory.createXYStepChart("\"8V$Smk;?gh{@S/", "\"8V$Smk;?gh{@S/", "\"8V$Smk;?gh{@S/", (XYDataset) null);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      PlotOrientation plotOrientation0 = PlotOrientation.VERTICAL;
      // Undeclared exception!
      try { 
        ChartFactory.createWaferMapChart("J9[:;R3@iY0d+UN", (WaferMapDataset) null, plotOrientation0, true, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.WaferMapRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      MatrixSeriesCollection<Integer> matrixSeriesCollection0 = new MatrixSeriesCollection<Integer>();
      JFreeChart jFreeChart0 = ChartFactory.createBubbleChart("X: {1} Mean: {2} Median: {3} Min: {4} Max: {5} Q1: {6} Q3: {7} ", "NZjvgU", "NZjvgU", (XYZDataset) matrixSeriesCollection0);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      MatrixSeriesCollection<String> matrixSeriesCollection0 = new MatrixSeriesCollection<String>();
      JFreeChart jFreeChart0 = ChartFactory.createPolarChart("Nec;$+;_", matrixSeriesCollection0, true, true, true);
      assertEquals(1, jFreeChart0.getSubtitleCount());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Date[] dateArray0 = new Date[1];
      double[] doubleArray0 = new double[0];
      DefaultHighLowDataset defaultHighLowDataset0 = new DefaultHighLowDataset(0.5F, dateArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      // Undeclared exception!
      try { 
        ChartFactory.createHighLowChart("QZ<o-ZP", "QZ<o-ZP", "QZ<o-ZP", defaultHighLowDataset0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.xy.DefaultHighLowDataset", e);
      }
  }
}
