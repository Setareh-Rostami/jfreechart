/*
 * This file was automatically generated by EvoSuite
 * Mon May 31 19:35:46 GMT 2021
 */

package org.jfree.chart.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.geom.Arc2D;
import java.awt.geom.RoundRectangle2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.entity.PlotEntity;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.MeterPlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.RingPlot;
import org.jfree.chart.plot.WaferMapPlot;
import org.jfree.data.general.WaferMapDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PlotEntity_ESTest extends PlotEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Arc2D.Double arc2D_Double0 = new Arc2D.Double((-1571.511389), (-1571.511389), (-1571.511389), (-1571.511389), 0.0, (-1571.511389), 0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      PlotEntity plotEntity0 = new PlotEntity(arc2D_Double0, combinedRangeCategoryPlot0);
      combinedRangeCategoryPlot0.setParent(combinedRangeCategoryPlot0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot1 = (CombinedRangeCategoryPlot)plotEntity0.getPlot();
      assertFalse(CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.setOutlineVisible(false);
      PlotEntity plotEntity0 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_BOX, ringPlot0);
      Plot plot0 = plotEntity0.getPlot();
      assertEquals(1.0F, Plot.DEFAULT_FOREGROUND_ALPHA, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.setNotify(false);
      PlotEntity plotEntity0 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_BOX, ringPlot0);
      RingPlot ringPlot1 = (RingPlot)plotEntity0.getPlot();
      assertTrue(ringPlot1.getSeparatorsVisible());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      Rectangle rectangle0 = polygon0.getBounds();
      MeterPlot meterPlot0 = new MeterPlot();
      meterPlot0.setForegroundAlpha(0);
      PlotEntity plotEntity0 = new PlotEntity(rectangle0, meterPlot0, "<)|Wmgj#");
      Plot plot0 = plotEntity0.getPlot();
      assertNull(plot0.getNoDataMessage());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      WaferMapDataset waferMapDataset0 = new WaferMapDataset(960, (-1));
      WaferMapPlot waferMapPlot0 = new WaferMapPlot(waferMapDataset0);
      PlotEntity plotEntity0 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, waferMapPlot0, "");
      waferMapPlot0.setForegroundAlpha((-1225.0F));
      Plot plot0 = plotEntity0.getPlot();
      assertFalse(plot0.isSubplot());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.setBackgroundImageAlpha(0.0F);
      PlotEntity plotEntity0 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_BOX, ringPlot0);
      RingPlot ringPlot1 = (RingPlot)plotEntity0.getPlot();
      assertEquals(4.0, ringPlot1.getShadowYOffset(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.setBackgroundAlpha(0.0F);
      PlotEntity plotEntity0 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_BOX, ringPlot0);
      RingPlot ringPlot1 = (RingPlot)plotEntity0.getPlot();
      assertFalse(ringPlot1.getAutoPopulateSectionOutlineStroke());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      ringPlot0.setBackgroundAlpha((-117.98F));
      PlotEntity plotEntity0 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, ringPlot0);
      RingPlot ringPlot1 = (RingPlot)plotEntity0.getPlot();
      assertNull(ringPlot1.getCenterText());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      PlotEntity plotEntity0 = null;
      try {
        plotEntity0 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_BOX, (Plot) null, "", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      PlotEntity plotEntity0 = null;
      try {
        plotEntity0 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_BOX, (Plot) null, "org.jfree.chart.annotations.XYLineAnnotation");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      PlotEntity plotEntity0 = null;
      try {
        plotEntity0 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, (Plot) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'plot' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      RingPlot ringPlot0 = new RingPlot();
      PlotEntity plotEntity0 = new PlotEntity(polygon0, ringPlot0, "", "3JGs$'w0&m");
      Object object0 = plotEntity0.clone();
      boolean boolean0 = plotEntity0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      PlotEntity plotEntity0 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_BOX, ringPlot0);
      RoundRectangle2D.Float roundRectangle2D_Float0 = new RoundRectangle2D.Float(1902.485F, 0.0F, 2184.32F, 10, (-1912.3F), 0.8F);
      CombinedDomainXYPlot<String> combinedDomainXYPlot0 = new CombinedDomainXYPlot<String>();
      PlotEntity plotEntity1 = new PlotEntity(roundRectangle2D_Float0, combinedDomainXYPlot0);
      plotEntity1.setArea(combinedDomainXYPlot0.DEFAULT_LEGEND_ITEM_BOX);
      boolean boolean0 = plotEntity1.equals(plotEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      PlotEntity plotEntity0 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, ringPlot0);
      plotEntity0.setToolTipText("");
      PlotEntity plotEntity1 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, ringPlot0, "", "");
      boolean boolean0 = plotEntity0.equals(plotEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      PlotEntity plotEntity0 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, ringPlot0);
      PlotEntity plotEntity1 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, ringPlot0, "", "");
      boolean boolean0 = plotEntity0.equals(plotEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Polygon polygon0 = new Polygon();
      RingPlot ringPlot0 = new RingPlot();
      PlotEntity plotEntity0 = new PlotEntity(polygon0, ringPlot0, "", "3JGs$'w0&m");
      boolean boolean0 = plotEntity0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      PlotEntity plotEntity0 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_BOX, ringPlot0);
      boolean boolean0 = plotEntity0.equals(plotEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      PlotEntity plotEntity0 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, ringPlot0);
      PlotEntity plotEntity1 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_BOX, ringPlot0, "OUTSIDE3");
      boolean boolean0 = plotEntity0.equals(plotEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      PlotEntity plotEntity0 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_CIRCLE, ringPlot0);
      String string0 = plotEntity0.toString();
      assertEquals("PlotEntity: tooltip = null", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RingPlot ringPlot0 = new RingPlot();
      PlotEntity plotEntity0 = new PlotEntity(ringPlot0.DEFAULT_LEGEND_ITEM_BOX, ringPlot0);
      plotEntity0.hashCode();
  }
}
